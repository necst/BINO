FROM ubuntu:18.04

RUN apt-get update && apt-get install -y \
python3-pip \
python3.8 \
python3.8-dev \
apt-file \
git \
wget \
clang-10 \
graphviz-dev \
libx11-dev \
nano \
libncurses5-dev \
libssl-dev \
p7zip-full \
cmake \
libopenblas-dev \
liblapack-dev \
libarpack2-dev \
libsuperlu-dev

WORKDIR /home/inlinerecognizer

RUN wget https://launchpad.net/ubuntu/+archive/primary/+sourcefiles/armadillo/1:11.2.3+dfsg-1/armadillo_11.2.3+dfsg.orig.tar.xz
RUN tar -xf armadillo_11.2.3+dfsg.orig.tar.xz
RUN rm armadillo_11.2.3+dfsg.orig.tar.xz
WORKDIR /home/inlinerecognizer/armadillo-11.2.3
RUN cmake .
RUN make install
WORKDIR /home/inlinerecognizer
RUN rm -rf armadillo-11.2.3

RUN wget https://boostorg.jfrog.io/artifactory/main/release/1.78.0/source/boost_1_78_0.tar.gz
RUN tar -xf boost_1_78_0.tar.gz
RUN rm boost_1_78_0.tar.gz
WORKDIR /home/inlinerecognizer/boost_1_78_0
RUN ./bootstrap.sh --prefix=/usr/
RUN ./b2 install
WORKDIR /home/inlinerecognizer
RUN rm -rf boost_1_78_0

COPY requirements.txt .

RUN wget https://bootstrap.pypa.io/get-pip.py &&\
    python3.8 get-pip.py &&\
    rm get-pip.py &&\
    pip3.8 install -r requirements.txt

RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 1
RUN echo "./git_testing.py -cs std::vector -d" > run.sh
RUN chmod +x run.sh

COPY configurations configurations/
COPY data data/
COPY fingerprint fingerprint/
COPY stages stages/ 
COPY utils utils/ 
COPY parsing parsing/ 
COPY testing testing/
COPY docker/images/$CLASS_NAME$/run.sh ./run.sh
COPY docker/images/$CLASS_NAME$/no_hup_run.sh ./no_hup_run.sh
COPY docker/scripts/git_testing.py ./git_testing.py
COPY compiler_stage.py preprocessor_stage.py fingerprinter_stage.py storer_stage.py sources_builder_stage.py summaries_builder_stage.py install.sh uninstall.sh ./

RUN chmod +x sources_builder_stage.py &&\
    chmod +x preprocessor_stage.py &&\
    chmod +x compiler_stage.py &&\
    chmod +x summaries_builder_stage.py &&\
    chmod +x fingerprinter_stage.py &&\
    chmod +x storer_stage.py &&\
    chmod +x git_testing.py &&\
    chmod +x run.sh &&\
    chmod +x no_hup_run.sh &&\
    ln -s /usr/lib/llvm-10/lib/libclang-10.so.1 /usr/lib/llvm-10/lib/libclang-10.so

CMD ["tail", "-f", "/dev/null"]