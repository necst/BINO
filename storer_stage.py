#!/usr/bin/python3

import argparse
import logging
import sys
from os.path import dirname, abspath, isdir
from stages.storer import storer

DEFAULT_SRC_PATH = "data/fingerprint/"
DEFAULT_DST_PATH = "data/fingerprints_db/"

def dir_path(path):
    if not isdir(path):
        raise argparse.ArgumentTypeError(path + " is not a valid directory path.")
    return path

if __name__ == '__main__':
    """
    The goal of this script is to build the source code of all 
    the public methods in a class.
    """

    # Projecj path
    prj_path = dirname(abspath(__file__))
    # Argument parsing
    parser = argparse.ArgumentParser(description="Enriched functions storer. It stores the enriched functions " +
                                     " generated by the previous stage.")
    parser.add_argument("-d",
                        "--debug",
                        dest="debug",
                        action="store_true",
                        help="Debug mode.")
    parser.add_argument("-csp",
                        "--classes-summaries-path",
                        dest="cs_path",
                        type=dir_path,
                        help="Path to a directory which constains enriched functions.")
    parser.add_argument("-dest-path",
                        "--destination-path",
                        dest="destination_path",
                        type=dir_path,
                        help="Destination path of the enriched functions.")
    args = parser.parse_args()
    # Arguments actions
    storer_logger = logging.getLogger('storer')
    if args.debug:
        storer_logger.setLevel(logging.DEBUG)
    else:
        storer_logger.setLevel(logging.INFO)
    storer_logger.addHandler(logging.StreamHandler(sys.stdout))        
    if args.cs_path is not None:
        src_path = args.cs_path
    else:
        src_path = DEFAULT_SRC_PATH
    if args.destination_path is not None:
        dst_path = args.destination_path
    else:
        dst_path = DEFAULT_DST_PATH
    storer(src_path, dst_path)